// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: proto/aristarchos.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PartOfSpeech int32

const (
	PartOfSpeech_UNKNOWN_CATEGORY PartOfSpeech = 0
	PartOfSpeech_VERB             PartOfSpeech = 1
	PartOfSpeech_NOUN             PartOfSpeech = 2
	PartOfSpeech_PARTICIPLE       PartOfSpeech = 3
	PartOfSpeech_PREPOSITION      PartOfSpeech = 4
	PartOfSpeech_PARTICLE         PartOfSpeech = 5
	PartOfSpeech_ADVERB           PartOfSpeech = 6
	PartOfSpeech_CONJUNCTION      PartOfSpeech = 7
	PartOfSpeech_ARTICLE          PartOfSpeech = 8
	PartOfSpeech_PRONOUN          PartOfSpeech = 9
)

// Enum value maps for PartOfSpeech.
var (
	PartOfSpeech_name = map[int32]string{
		0: "UNKNOWN_CATEGORY",
		1: "VERB",
		2: "NOUN",
		3: "PARTICIPLE",
		4: "PREPOSITION",
		5: "PARTICLE",
		6: "ADVERB",
		7: "CONJUNCTION",
		8: "ARTICLE",
		9: "PRONOUN",
	}
	PartOfSpeech_value = map[string]int32{
		"UNKNOWN_CATEGORY": 0,
		"VERB":             1,
		"NOUN":             2,
		"PARTICIPLE":       3,
		"PREPOSITION":      4,
		"PARTICLE":         5,
		"ADVERB":           6,
		"CONJUNCTION":      7,
		"ARTICLE":          8,
		"PRONOUN":          9,
	}
)

func (x PartOfSpeech) Enum() *PartOfSpeech {
	p := new(PartOfSpeech)
	*p = x
	return p
}

func (x PartOfSpeech) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PartOfSpeech) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_aristarchos_proto_enumTypes[0].Descriptor()
}

func (PartOfSpeech) Type() protoreflect.EnumType {
	return &file_proto_aristarchos_proto_enumTypes[0]
}

func (x PartOfSpeech) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PartOfSpeech.Descriptor instead.
func (PartOfSpeech) EnumDescriptor() ([]byte, []int) {
	return file_proto_aristarchos_proto_rawDescGZIP(), []int{0}
}

type AggregatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootWord string `protobuf:"bytes,1,opt,name=root_word,json=rootWord,proto3" json:"root_word,omitempty"`
}

func (x *AggregatorRequest) Reset() {
	*x = AggregatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aristarchos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatorRequest) ProtoMessage() {}

func (x *AggregatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aristarchos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatorRequest.ProtoReflect.Descriptor instead.
func (*AggregatorRequest) Descriptor() ([]byte, []int) {
	return file_proto_aristarchos_proto_rawDescGZIP(), []int{0}
}

func (x *AggregatorRequest) GetRootWord() string {
	if x != nil {
		return x.RootWord
	}
	return ""
}

type AggregatorCreationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word         string       `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Rule         string       `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
	RootWord     string       `protobuf:"bytes,3,opt,name=root_word,json=rootWord,proto3" json:"root_word,omitempty"`
	Translation  string       `protobuf:"bytes,4,opt,name=translation,proto3" json:"translation,omitempty"`
	PartOfSpeech PartOfSpeech `protobuf:"varint,5,opt,name=part_of_speech,json=partOfSpeech,proto3,enum=olympia_aristarchos.PartOfSpeech" json:"part_of_speech,omitempty"`
	TraceId      string       `protobuf:"bytes,6,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *AggregatorCreationRequest) Reset() {
	*x = AggregatorCreationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aristarchos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatorCreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatorCreationRequest) ProtoMessage() {}

func (x *AggregatorCreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aristarchos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatorCreationRequest.ProtoReflect.Descriptor instead.
func (*AggregatorCreationRequest) Descriptor() ([]byte, []int) {
	return file_proto_aristarchos_proto_rawDescGZIP(), []int{1}
}

func (x *AggregatorCreationRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *AggregatorCreationRequest) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *AggregatorCreationRequest) GetRootWord() string {
	if x != nil {
		return x.RootWord
	}
	return ""
}

func (x *AggregatorCreationRequest) GetTranslation() string {
	if x != nil {
		return x.Translation
	}
	return ""
}

func (x *AggregatorCreationRequest) GetPartOfSpeech() PartOfSpeech {
	if x != nil {
		return x.PartOfSpeech
	}
	return PartOfSpeech_UNKNOWN_CATEGORY
}

func (x *AggregatorCreationRequest) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type FormsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word           string   `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	UnaccentedWord string   `protobuf:"bytes,2,opt,name=unaccented_word,json=unaccentedWord,proto3" json:"unaccented_word,omitempty"`
	Rule           string   `protobuf:"bytes,3,opt,name=rule,proto3" json:"rule,omitempty"`
	RootWord       string   `protobuf:"bytes,4,opt,name=root_word,json=rootWord,proto3" json:"root_word,omitempty"`
	Translation    []string `protobuf:"bytes,5,rep,name=translation,proto3" json:"translation,omitempty"`
	PartOfSpeech   string   `protobuf:"bytes,6,opt,name=part_of_speech,json=partOfSpeech,proto3" json:"part_of_speech,omitempty"`
	Variants       []string `protobuf:"bytes,7,rep,name=variants,proto3" json:"variants,omitempty"`
}

func (x *FormsResponse) Reset() {
	*x = FormsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aristarchos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormsResponse) ProtoMessage() {}

func (x *FormsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aristarchos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormsResponse.ProtoReflect.Descriptor instead.
func (*FormsResponse) Descriptor() ([]byte, []int) {
	return file_proto_aristarchos_proto_rawDescGZIP(), []int{2}
}

func (x *FormsResponse) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *FormsResponse) GetUnaccentedWord() string {
	if x != nil {
		return x.UnaccentedWord
	}
	return ""
}

func (x *FormsResponse) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *FormsResponse) GetRootWord() string {
	if x != nil {
		return x.RootWord
	}
	return ""
}

func (x *FormsResponse) GetTranslation() []string {
	if x != nil {
		return x.Translation
	}
	return nil
}

func (x *FormsResponse) GetPartOfSpeech() string {
	if x != nil {
		return x.PartOfSpeech
	}
	return ""
}

func (x *FormsResponse) GetVariants() []string {
	if x != nil {
		return x.Variants
	}
	return nil
}

type AggregatorCreationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created bool `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Updated bool `protobuf:"varint,2,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *AggregatorCreationResponse) Reset() {
	*x = AggregatorCreationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aristarchos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatorCreationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatorCreationResponse) ProtoMessage() {}

func (x *AggregatorCreationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aristarchos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatorCreationResponse.ProtoReflect.Descriptor instead.
func (*AggregatorCreationResponse) Descriptor() ([]byte, []int) {
	return file_proto_aristarchos_proto_rawDescGZIP(), []int{3}
}

func (x *AggregatorCreationResponse) GetCreated() bool {
	if x != nil {
		return x.Created
	}
	return false
}

func (x *AggregatorCreationResponse) GetUpdated() bool {
	if x != nil {
		return x.Updated
	}
	return false
}

type AggregatorStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ack string `protobuf:"bytes,1,opt,name=ack,proto3" json:"ack,omitempty"`
}

func (x *AggregatorStreamResponse) Reset() {
	*x = AggregatorStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aristarchos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatorStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatorStreamResponse) ProtoMessage() {}

func (x *AggregatorStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aristarchos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatorStreamResponse.ProtoReflect.Descriptor instead.
func (*AggregatorStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_aristarchos_proto_rawDescGZIP(), []int{4}
}

func (x *AggregatorStreamResponse) GetAck() string {
	if x != nil {
		return x.Ack
	}
	return ""
}

type SearchWordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word []string `protobuf:"bytes,1,rep,name=word,proto3" json:"word,omitempty"`
}

func (x *SearchWordResponse) Reset() {
	*x = SearchWordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aristarchos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchWordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchWordResponse) ProtoMessage() {}

func (x *SearchWordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aristarchos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchWordResponse.ProtoReflect.Descriptor instead.
func (*SearchWordResponse) Descriptor() ([]byte, []int) {
	return file_proto_aristarchos_proto_rawDescGZIP(), []int{5}
}

func (x *SearchWordResponse) GetWord() []string {
	if x != nil {
		return x.Word
	}
	return nil
}

type GrammaticalForm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word string `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Rule string `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *GrammaticalForm) Reset() {
	*x = GrammaticalForm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aristarchos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrammaticalForm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrammaticalForm) ProtoMessage() {}

func (x *GrammaticalForm) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aristarchos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrammaticalForm.ProtoReflect.Descriptor instead.
func (*GrammaticalForm) Descriptor() ([]byte, []int) {
	return file_proto_aristarchos_proto_rawDescGZIP(), []int{6}
}

func (x *GrammaticalForm) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *GrammaticalForm) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

type GrammaticalCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Forms []*GrammaticalForm `protobuf:"bytes,4,rep,name=forms,proto3" json:"forms,omitempty"`
}

func (x *GrammaticalCategory) Reset() {
	*x = GrammaticalCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aristarchos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrammaticalCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrammaticalCategory) ProtoMessage() {}

func (x *GrammaticalCategory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aristarchos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrammaticalCategory.ProtoReflect.Descriptor instead.
func (*GrammaticalCategory) Descriptor() ([]byte, []int) {
	return file_proto_aristarchos_proto_rawDescGZIP(), []int{7}
}

func (x *GrammaticalCategory) GetForms() []*GrammaticalForm {
	if x != nil {
		return x.Forms
	}
	return nil
}

type RootWordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootWord       string                 `protobuf:"bytes,1,opt,name=rootWord,proto3" json:"rootWord,omitempty"`
	PartOfSpeech   PartOfSpeech           `protobuf:"varint,2,opt,name=part_of_speech,json=partOfSpeech,proto3,enum=olympia_aristarchos.PartOfSpeech" json:"part_of_speech,omitempty"`
	Translations   []string               `protobuf:"bytes,3,rep,name=translations,proto3" json:"translations,omitempty"`
	Categories     []*GrammaticalCategory `protobuf:"bytes,4,rep,name=categories,proto3" json:"categories,omitempty"`
	UnaccentedWord string                 `protobuf:"bytes,5,opt,name=unaccented_word,json=unaccentedWord,proto3" json:"unaccented_word,omitempty"`
	Variants       []string               `protobuf:"bytes,6,rep,name=variants,proto3" json:"variants,omitempty"`
}

func (x *RootWordResponse) Reset() {
	*x = RootWordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aristarchos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootWordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootWordResponse) ProtoMessage() {}

func (x *RootWordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aristarchos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootWordResponse.ProtoReflect.Descriptor instead.
func (*RootWordResponse) Descriptor() ([]byte, []int) {
	return file_proto_aristarchos_proto_rawDescGZIP(), []int{8}
}

func (x *RootWordResponse) GetRootWord() string {
	if x != nil {
		return x.RootWord
	}
	return ""
}

func (x *RootWordResponse) GetPartOfSpeech() PartOfSpeech {
	if x != nil {
		return x.PartOfSpeech
	}
	return PartOfSpeech_UNKNOWN_CATEGORY
}

func (x *RootWordResponse) GetTranslations() []string {
	if x != nil {
		return x.Translations
	}
	return nil
}

func (x *RootWordResponse) GetCategories() []*GrammaticalCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *RootWordResponse) GetUnaccentedWord() string {
	if x != nil {
		return x.UnaccentedWord
	}
	return ""
}

func (x *RootWordResponse) GetVariants() []string {
	if x != nil {
		return x.Variants
	}
	return nil
}

type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Health bool `protobuf:"varint,1,opt,name=health,proto3" json:"health,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aristarchos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aristarchos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_aristarchos_proto_rawDescGZIP(), []int{9}
}

func (x *HealthResponse) GetHealth() bool {
	if x != nil {
		return x.Health
	}
	return false
}

type HealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_aristarchos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aristarchos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_proto_aristarchos_proto_rawDescGZIP(), []int{10}
}

var File_proto_aristarchos_proto protoreflect.FileDescriptor

var file_proto_aristarchos_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x72, 0x63,
	0x68, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x69, 0x61, 0x5f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x22, 0x30,
	0x0a, 0x11, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x57, 0x6f, 0x72, 0x64,
	0x22, 0xe6, 0x01, 0x0a, 0x19, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x57,
	0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6f, 0x66,
	0x5f, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x61, 0x5f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x72, 0x63,
	0x68, 0x6f, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68,
	0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x0d, 0x46, 0x6f,
	0x72, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x61, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x6e, 0x61, 0x63, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x6f, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x70,
	0x61, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x50, 0x0a,
	0x1a, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x2c, 0x0a, 0x18, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x22, 0x28, 0x0a,
	0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x39, 0x0a, 0x0f, 0x47, 0x72, 0x61, 0x6d, 0x6d,
	0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x22, 0x51, 0x0a, 0x13, 0x47, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x66, 0x6f, 0x72,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x69, 0x61, 0x5f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x2e, 0x47,
	0x72, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x05,
	0x66, 0x6f, 0x72, 0x6d, 0x73, 0x22, 0xaa, 0x02, 0x0a, 0x10, 0x52, 0x6f, 0x6f, 0x74, 0x57, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f,
	0x6f, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f,
	0x6f, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x47, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6f,
	0x66, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x61, 0x5f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x72,
	0x63, 0x68, 0x6f, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63,
	0x68, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x12,
	0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x69,
	0x61, 0x5f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x2e, 0x47, 0x72,
	0x61, 0x6d, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x75, 0x6e, 0x61, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x6e, 0x61, 0x63, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x22, 0x0f, 0x0a, 0x0d,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2a, 0x9e, 0x01,
	0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x12, 0x14,
	0x0a, 0x10, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f,
	0x52, 0x59, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x56, 0x45, 0x52, 0x42, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x55, 0x4e, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x41, 0x52, 0x54,
	0x49, 0x43, 0x49, 0x50, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x52, 0x45, 0x50,
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x41, 0x52,
	0x54, 0x49, 0x43, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x44, 0x56, 0x45, 0x52,
	0x42, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x4a, 0x55, 0x4e, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x10,
	0x08, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x4f, 0x4e, 0x4f, 0x55, 0x4e, 0x10, 0x09, 0x32, 0x8e,
	0x04, 0x0a, 0x0b, 0x41, 0x72, 0x69, 0x73, 0x74, 0x61, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x12, 0x71,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x2e, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x61, 0x5f, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x61, 0x5f, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28,
	0x01, 0x12, 0x60, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x26, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x61, 0x5f, 0x61, 0x72, 0x69,
	0x73, 0x74, 0x61, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x69, 0x61, 0x5f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x72, 0x63, 0x68, 0x6f, 0x73,
	0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x1b, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x12, 0x26, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x61, 0x5f, 0x61, 0x72, 0x69,
	0x73, 0x74, 0x61, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x69, 0x61, 0x5f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x72, 0x63, 0x68, 0x6f, 0x73,
	0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x68, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x26, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x69,
	0x61, 0x5f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x2e, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x61, 0x5f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61,
	0x72, 0x63, 0x68, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x06, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x12, 0x22, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x61, 0x5f, 0x61,
	0x72, 0x69, 0x73, 0x74, 0x61, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x69, 0x61, 0x5f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x64,
	0x79, 0x73, 0x73, 0x65, 0x69, 0x61, 0x2d, 0x67, 0x72, 0x65, 0x65, 0x6b, 0x2f, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x69, 0x61, 0x2f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x72, 0x63, 0x68, 0x6f, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_aristarchos_proto_rawDescOnce sync.Once
	file_proto_aristarchos_proto_rawDescData = file_proto_aristarchos_proto_rawDesc
)

func file_proto_aristarchos_proto_rawDescGZIP() []byte {
	file_proto_aristarchos_proto_rawDescOnce.Do(func() {
		file_proto_aristarchos_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_aristarchos_proto_rawDescData)
	})
	return file_proto_aristarchos_proto_rawDescData
}

var file_proto_aristarchos_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_aristarchos_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_aristarchos_proto_goTypes = []interface{}{
	(PartOfSpeech)(0),                  // 0: olympia_aristarchos.PartOfSpeech
	(*AggregatorRequest)(nil),          // 1: olympia_aristarchos.AggregatorRequest
	(*AggregatorCreationRequest)(nil),  // 2: olympia_aristarchos.AggregatorCreationRequest
	(*FormsResponse)(nil),              // 3: olympia_aristarchos.FormsResponse
	(*AggregatorCreationResponse)(nil), // 4: olympia_aristarchos.AggregatorCreationResponse
	(*AggregatorStreamResponse)(nil),   // 5: olympia_aristarchos.AggregatorStreamResponse
	(*SearchWordResponse)(nil),         // 6: olympia_aristarchos.SearchWordResponse
	(*GrammaticalForm)(nil),            // 7: olympia_aristarchos.GrammaticalForm
	(*GrammaticalCategory)(nil),        // 8: olympia_aristarchos.GrammaticalCategory
	(*RootWordResponse)(nil),           // 9: olympia_aristarchos.RootWordResponse
	(*HealthResponse)(nil),             // 10: olympia_aristarchos.HealthResponse
	(*HealthRequest)(nil),              // 11: olympia_aristarchos.HealthRequest
}
var file_proto_aristarchos_proto_depIdxs = []int32{
	0,  // 0: olympia_aristarchos.AggregatorCreationRequest.part_of_speech:type_name -> olympia_aristarchos.PartOfSpeech
	7,  // 1: olympia_aristarchos.GrammaticalCategory.forms:type_name -> olympia_aristarchos.GrammaticalForm
	0,  // 2: olympia_aristarchos.RootWordResponse.part_of_speech:type_name -> olympia_aristarchos.PartOfSpeech
	8,  // 3: olympia_aristarchos.RootWordResponse.categories:type_name -> olympia_aristarchos.GrammaticalCategory
	2,  // 4: olympia_aristarchos.Aristarchos.CreateNewEntry:input_type -> olympia_aristarchos.AggregatorCreationRequest
	1,  // 5: olympia_aristarchos.Aristarchos.RetrieveEntry:input_type -> olympia_aristarchos.AggregatorRequest
	1,  // 6: olympia_aristarchos.Aristarchos.RetrieveRootFromGrammarForm:input_type -> olympia_aristarchos.AggregatorRequest
	1,  // 7: olympia_aristarchos.Aristarchos.RetrieveSearchWords:input_type -> olympia_aristarchos.AggregatorRequest
	11, // 8: olympia_aristarchos.Aristarchos.Health:input_type -> olympia_aristarchos.HealthRequest
	5,  // 9: olympia_aristarchos.Aristarchos.CreateNewEntry:output_type -> olympia_aristarchos.AggregatorStreamResponse
	9,  // 10: olympia_aristarchos.Aristarchos.RetrieveEntry:output_type -> olympia_aristarchos.RootWordResponse
	3,  // 11: olympia_aristarchos.Aristarchos.RetrieveRootFromGrammarForm:output_type -> olympia_aristarchos.FormsResponse
	6,  // 12: olympia_aristarchos.Aristarchos.RetrieveSearchWords:output_type -> olympia_aristarchos.SearchWordResponse
	10, // 13: olympia_aristarchos.Aristarchos.Health:output_type -> olympia_aristarchos.HealthResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_aristarchos_proto_init() }
func file_proto_aristarchos_proto_init() {
	if File_proto_aristarchos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_aristarchos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aristarchos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatorCreationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aristarchos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aristarchos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatorCreationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aristarchos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatorStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aristarchos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchWordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aristarchos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrammaticalForm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aristarchos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrammaticalCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aristarchos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootWordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aristarchos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_aristarchos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_aristarchos_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_aristarchos_proto_goTypes,
		DependencyIndexes: file_proto_aristarchos_proto_depIdxs,
		EnumInfos:         file_proto_aristarchos_proto_enumTypes,
		MessageInfos:      file_proto_aristarchos_proto_msgTypes,
	}.Build()
	File_proto_aristarchos_proto = out.File
	file_proto_aristarchos_proto_rawDesc = nil
	file_proto_aristarchos_proto_goTypes = nil
	file_proto_aristarchos_proto_depIdxs = nil
}
