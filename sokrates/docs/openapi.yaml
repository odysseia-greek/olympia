openapi: 3.0.1
info:
  title: Sokrates
  description: |-
    # Introduction
    This is the documentation related to Sokrates, the quiz component part of odyssiea-greek

    ## Sokrates in Greek

    ἓν οἶδα ὅτι οὐδὲν οἶδα

    ## Sokrates in English

    # I know one thing, that I know nothing

    ## Note on text

    # Translation is mine
  termsOfService: there are no TOS at this moment, use at your own risk we take no
    responsibility
  contact:
    url: https://github.com/odysseia-greek
    email: joerivrijaldenhoven@odysseia-greek.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: 0.2.4
servers:
- url: http://k3s-odysseia.greek/sokrates/v1
- url: https://k3s-odysseia.greek/sokrates/v1
paths:
  /answer:
    post:
      tags:
      - questions
      description: Checks the whether the provided answer is right or wrong
      operationId: answer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ComprehensiveResponse'
                  - $ref: '#/components/schemas/DialogueQuizAnswer'
                  - $ref: '#/components/schemas/AuthorBasedResponse'
                discriminator:
                  propertyName: responseType
                  mapping:
                    comprehensiveResponse: '#/components/schemas/ComprehensiveResponse'
                    dialogueResponse: '#/components/schemas/DialogueQuizAnswer'
                    authorBasedResponse: '#/components/schemas/AuthorBasedResponse'
        400:
          description: ValidationError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        405:
          description: MethodError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodError'
        502:
          description: ElasticSearchError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSearchError'
      x-codegen-request-body-name: Application
  /create:
    post:
      tags:
        - questions
      description: >-
        Creates a new quiz question based on the quizType
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuiz'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/QuizResponse'
                  - $ref: '#/components/schemas/DialogueQuizResponse'
                  - $ref: '#/components/schemas/AuthorBasedQuizResponse'
                discriminator:
                  propertyName: responseType
                  mapping:
                    createQuiz: '#/components/schemas/QuizResponse'
                    dialogueQuiz: '#/components/schemas/DialogueQuizResponse'
                    authorBasedQuiz: '#/components/schemas/AuthorBasedQuizResponse'
        '400':
          description: ValidationError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '405':
          description: MethodError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodError'
        '502':
          description: ElasticSearchError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSearchError'
  /health:
    get:
      tags:
      - status
      description: Checks if api is healthy
      operationId: health
      responses:
        200:
          description: Health
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        502:
          description: Health
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
  /options:
    get:
      tags:
      - options
      description: Finds all themes available
      operationId: options
      parameters:
        - name: quizType
          in: query
          description: the quizType to create options for
          required: true
          example: dialogue
          schema:
            type: string
            format: quizType
      responses:
        200:
          description: AggregatedOptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatedOptions'
        405:
          description: MethodError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodError'
        502:
          description: ElasticSearchError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElasticSearchError'
components:
  schemas:
    Segment:
      type: object
      properties:
        name:
          type: string
          example: Animals
          description: The name of the segment
        maxSet:
          type: number
          format: float
          example: 1
          description: The maximum value for the set in the segment
      required:
        - name
        - maxSet

    Theme:
      type: object
      properties:
        name:
          type: string
          example: Basic
          description: The name of the theme
        segments:
          type: array
          items:
            $ref: '#/components/schemas/Segment'
          description: List of segments associated with the theme
      required:
        - name
        - segments

    AggregatedOptions:
      type: object
      properties:
        themes:
          type: array
          items:
            $ref: '#/components/schemas/Theme'
          description: List of themes included in the aggregated options
      required:
        - themes

    CreateQuiz:
      type: object
      properties:
        set:
          type: integer
          example: 1
        theme:
          type: string
          example: Euripides - Medea
        segment:
          type: string
          example: Economic
        quizType:
          type: string
          example: dialogue
        order:
          type: string
          example: gre-eng
        excludeWords:
          type: array
          items:
            type: string
            example: "ἀρχή"
      required:
        - quizType
    QuizResponse:
      type: object
      properties:
        quizItem:
          type: string
          example: ὁ λόγος
        numberOfItems:
          type: integer
          example: 20
        options:
          type: array
          items:
            $ref: '#/components/schemas/Options'
    Options:
      type: object
      properties:
        audioUrl:
          type: string
          example: agora.wav
        imageUrl:
          type: string
          example: agora.webp
        quizWord:
          type: string
          example: word
      required:
        - quizWord

    AuthorBasedQuizResponse:
      type: object
      properties:
        fullSentence:
          type: string
          example: ΕΝ ΑΡΧΗ ἦν ὁ λόγος, καὶ ὁ λόγος ἦν πρὸς τὸν θεόν, καὶ θεὸς ἦν ὁ λόγος
        translation:
          type: string
          example: In the beginning was the Word, and the Word was with God, and the Word was God.
        reference:
          type: string
          example: /texts?author=John&book=New+Testament&reference=1
        quiz:
          $ref: '#/components/schemas/QuizResponse'

    DialogueQuizResponse:
      type: object
      properties:
        quizMetadata:
          $ref: '#/components/schemas/QuizMetadata'
        theme:
          type: string
          example: Euripides - Medea
        quizType:
          type: string
          example: dialogue
        set:
          type: integer
          example: 1
        dialogue:
          $ref: '#/components/schemas/Dialogue'
        content:
          type: array
          items:
            $ref: '#/components/schemas/DialogueContent'
      required:
        - quizMetadata
        - theme
        - quizType
        - set
        - dialogue
        - content

    QuizMetadata:
      type: object
      properties:
        language:
          type: string
          example: English
      required:
        - language

    DialogueContent:
      type: object
      properties:
        translation:
          type: string
          example: What, wilt thou banish me, and to my prayers no pity yield?
        greek:
          type: string
          example: ἀλλ’ ἐξελᾷς με κοὐδὲν αἰδέσῃ λιτάς;
        place:
          type: integer
          example: 4
        speaker:
          type: string
          example: Μήδεια
      required:
        - translation
        - greek
        - place
        - speaker

    Dialogue:
      type: object
      properties:
        introduction:
          type: string
          example: Plato's "Euthyphro" is an early dialogue
        speakers:
          type: array
          items:
            $ref: '#/components/schemas/Speaker'
        section:
          type: string
          example: 3e-4b
        linkToPerseus:
          type: string
          example: https://scaife.perseus.org/reader/urn:cts:greekLit:tlg0059.tlg001.perseus-grc1:3-4?right=perseus-eng2
      required:
        - introduction
        - speakers
        - section
        - linkToPerseus

    Speaker:
      type: object
      properties:
        name:
          type: string
          example: ΣΩΚΡΑΤΗΣ
        shorthand:
          type: string
          example: ΣΩ
        translation:
          type: string
          example: Socrates


    AnswerRequest:
      type: object
      properties:
        theme:
          type: string
          example: Euripides - Medea
        set:
          type: string
          example: 1
        quizType:
          type: string
          example: dialogue
        segment:
          type: string
          example: Social
        comprehensive:
          type: boolean
          example: true
        answer:
          type: string
          example: any straight rod
        quizWord:
          type: string
          example: κανών
        dialogue:
          type: array
          items:
            $ref: '#/components/schemas/DialogueContent'
      required:
        - theme
        - set
        - quizType

    AuthorBasedResponse:
      type: object
      properties:
        correct:
          type: boolean
          example: false
        quizWord:
          type: string
          example: ἀρχή
        wordsInText:
          type: array
          items:
            type: string
            example: ΑΡΧΗ

    ComprehensiveResponse:
      type: object
      properties:
        correct:
          type: boolean
          example: false
        quizWord:
          type: string
          example: λογος
        foundInText:
          $ref: '#/components/schemas/FoundInText'
        similarWords:
          type: array
          items:
            $ref: '#/components/schemas/SimilarWord'
        progress:
          $ref: '#/components/schemas/Progress'

    FoundInText:
      type: object
      properties:
        rootword:
          type: string
        conjugations:
          type: array
          items:
            type: string
        texts:
          type: array
          items:
            $ref: '#/components/schemas/Texts'
      example:
        conjugations: ["λόγος", "λόγων", "λόγοι"]
        rootword: "λογος"
        texts:
          - author: "Matthew"
            book: "New Testament, Gospel of Matthew"
            reference: "12"
            referenceLink: "/texts?author=Matthew&book=New Testament, Gospel of Matthew&reference=12"
            text:
              greek: "ἐκ γὰρ τῶν λόγων σου δικαιωθήσῃ"
              translations:
                - "For by your words you will be justified, and by your words you will be condemned."

    Texts:
      type: object
      properties:
        author:
          type: string
        book:
          type: string
        reference:
          type: string
        referenceLink:
          type: string
        text:
          $ref: '#/components/schemas/TextInstance'
      example:
        author: "Matthew"
        book: "New Testament, Gospel of Matthew"
        reference: "12"
        referenceLink: "/texts?author=Matthew&book=New Testament, Gospel of Matthew&reference=12"
        text: { TextInstance }

    TextInstance:
      type: object
      properties:
        greek:
          type: string
        translations:
          type: array
          items:
            type: string
      example:
        greek: "ἐκ γὰρ τῶν λόγων σου δικαιωθήσῃ"
        translations:
          - "For by your words you will be justified, and by your words you will be condemned."

    SimilarWord:
      type: object
      properties:
        greek:
          type: string
          example: ἄλογος
        english:
          type: string
          example: without
      required:
        - greek
        - english

    Progress:
      type: object
      properties:
        timesCorrect:
          type: integer
          example: 10
        timesIncorrect:
          type: integer
          example: 0
        averageAccuracy:
          type: number
          format: float
          example: 100.00
      required:
        - timesCorrect
        - timesIncorrect
        - averageAccuracy

    DialogueQuizAnswer:
      type: object
      properties:
        percentage:
          type: number
          format: float
        input:
          type: array
          items:
            $ref: '#/components/schemas/DialogueContent'
        answer:
          type: array
          items:
            $ref: '#/components/schemas/DialogueContent'
        wronglyPlaced:
          type: array
          items:
            $ref: '#/components/schemas/WronglyPlacedContent'
      required:
        - percentage
        - input
        - answer
        - wronglyPlaced

    WronglyPlacedContent:
      allOf:
        - $ref: '#/components/schemas/DialogueContent'
        - type: object
          properties:
            correctPlace:
              type: integer
              example: 6
          required:
            - correctPlace
    Health:
      type: object
      properties:
        databaseHealth:
          $ref: '#/components/schemas/DatabaseHealth'
        healthy:
          type: boolean
          example: true
          x-go-name: Healthy
        memory:
          $ref: '#/components/schemas/Memory'
        time:
          type: string
          example: 2023-06-07 15:02:11.678766777 +0000 UTC m=+5090.268683461
          x-go-name: Time
      x-go-package: github.com/odysseia-greek/agora/plato/models
    DatabaseHealth:
      type: object
      properties:
        clusterName:
          type: string
          example: aristoteles
          x-go-name: ClusterName
        healthy:
          type: boolean
          example: true
          x-go-name: Healthy
        serverName:
          type: string
          example: aristoteles-es-worker-0
          x-go-name: ServerName
        serverVersion:
          type: string
          example: 8.8.0
          x-go-name: ServerVersion
      x-go-package: github.com/odysseia-greek/agora/plato/models
    Memory:
      type: object
      properties:
        alloc:
          type: integer
          format: uint64
          x-go-name: Alloc
        free:
          type: integer
          format: uint64
          x-go-name: Free
        sys:
          type: integer
          format: uint64
          x-go-name: Sys
        totalAlloc:
          type: integer
          format: uint64
          x-go-name: TotalAlloc
        unit:
          type: string
          x-go-name: Unit
      x-go-package: github.com/odysseia-greek/agora/plato/models

    ElasticErrorMessage:
      type: object
      properties:
        elasticError:
          type: string
          x-go-name: ElasticError
      x-go-package: github.com/odysseia-greek/agora/plato/models
    ElasticSearchError:
      required:
      - uniqueCode
      type: object
      properties:
        errorModel:
          $ref: '#/components/schemas/ElasticErrorMessage'
        uniqueCode:
          type: string
          example: 94374b4f-3dda-4ffb-b33b-2cb6ba092b84
          x-go-name: UniqueCode
      x-go-package: github.com/odysseia-greek/agora/plato/models
    ErrorModel:
      required:
      - uniqueCode
      type: object
      properties:
        uniqueCode:
          type: string
          example: 94374b4f-3dda-4ffb-b33b-2cb6ba092b84
          x-go-name: UniqueCode
      x-go-package: github.com/odysseia-greek/agora/plato/models
    MethodError:
      required:
        - uniqueCode
      type: object
      properties:
        errorModel:
          type: array
          items:
            $ref: '#/components/schemas/MethodMessages'
          x-go-name: Messages
        uniqueCode:
          type: string
          example: 94374b4f-3dda-4ffb-b33b-2cb6ba092b84
          x-go-name: UniqueCode
      x-go-package: github.com/odysseia-greek/agora/plato/models
    MethodMessages:
      type: object
      properties:
        allowedMethods:
          type: string
          example: GET
          x-go-name: Methods
        methodError:
          type: string
          example: Method DELETE not allowed at this endpoint
          x-go-name: Message
      description: MethodMessages messages used in method error
      x-go-package: github.com/odysseia-greek/agora/plato/models
    ValidationError:
      required:
        - uniqueCode
      type: object
      properties:
        errorModel:
          type: array
          items:
            $ref: '#/components/schemas/ValidationMessages'
          x-go-name: Messages
        uniqueCode:
          type: string
          example: 94374b4f-3dda-4ffb-b33b-2cb6ba092b84
          x-go-name: UniqueCode
      x-go-package: github.com/odysseia-greek/agora/plato/models
    ValidationMessages:
      type: object
      properties:
        validationField:
          type: string
          example: word
          x-go-name: Field
        validationMessage:
          type: string
          example: cannot be empty
          x-go-name: Message
      x-go-package: github.com/odysseia-greek/agora/plato/models