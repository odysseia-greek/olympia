---
# Source: melissos/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: melissossa
  namespace: odysseia
---
# Source: melissos/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: melissos
  namespace: odysseia
data:
  ELASTIC_SEARCH_SERVICE: "https://aristoteles-es-http:9200"
  ENV: "localdev"
  TLS_ENABLED: "true"
  CERT_ROOT: "/etc/certs"
  SOLON_SERVICE: "https://solon:5443"
  JOB_NAME: "demokritos"
  EUPALINOS_CHANNEL: "parmenides"
  EUPALINOS_SERVICE: "eupalinos:50051"
  WAIT_TIME: "10"
---
# Source: melissos/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: melissos
  namespace: odysseia
  labels:
    heritage: "Helm"
    release: "melissos"
    chart: "melissos"
rules:
  - apiGroups: ["batch"] # "" indicates the core API group
    resources: ["jobs"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]
---
# Source: melissos/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: melissos
  namespace: odysseia
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: melissos
subjects:
  - kind: ServiceAccount
    name: melissossa
    namespace: odysseia
---
# Source: melissos/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: melissos
  namespace: odysseia
  labels:
    heritage: "Helm"
    release: "melissos"
    chart: "melissos"
    env: localdev
    variant: k3d
    app: melissos
spec:
  template:
    metadata:
      labels:
        app: melissos
        release: melissos
        version: v0.0.11
      annotations:
        odysseia-greek/role: hybrid
        odysseia-greek/access: dictionary
        perikles/accesses: solon
    spec:
      serviceAccountName: melissossa
      initContainers:
        - name: "periandros"
          image: ghcr.io/odysseia-greek/periandros:v0.0.11
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ELASTIC_ROLE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['odysseia-greek/role']
            - name: ELASTIC_ACCESS
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['odysseia-greek/access']
          envFrom:
            - configMapRef:
                name: melissos
          volumeMounts:
            - name: solon-certs
              mountPath: /etc/certs/solon
              readOnly: true
      containers:
        - name: "ptolemaios"
          image: ghcr.io/odysseia-greek/ptolemaios:v0.0.11
          env:
            - name: VAULT_SERVICE
              value: https://vault:8200
            - name: VAULT_TLS
              value:  "true"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          envFrom:
            - configMapRef:
                name: melissos
          ports:
            - containerPort: 50051
          volumeMounts:
            - name: vault-server-tls
              mountPath: /etc/certs/vault
              readOnly: true
            - name: solon-certs
              mountPath: /etc/certs/solon
              readOnly: true
          imagePullPolicy: Always
          resources:
            requests:
              memory: 32Mi
              cpu: 50m
            limits:
              memory: 64Mi
              cpu: 100m
        - name: "melissos"
          image: ghcr.io/odysseia-greek/melissos:v0.0.11
          imagePullPolicy: Never
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ELASTIC_ACCESS
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['odysseia-greek/access']
          envFrom:
            - configMapRef:
                name: melissos
      restartPolicy: Never
      volumes:
        - name: vault-server-tls
          secret:
            secretName: vault-server-tls
        - name: solon-certs
          secret:
            secretName: solon-tls-certs
  backoffLimit: 3
---
# Source: melissos/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: melissos
  namespace: odysseia
spec:
  selector:
    app: melissos
  ports:
    - name: "delve"
      port: 2345
      targetPort: 2345
