{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "# Introduction\nThis API is documented in **OpenAPI format** and is using [ReDoc](https://github.com/Redocly/redoc)\n\n### Ploutarchos, in regards to Alexander, in Greek\n\nἈλέξανδρος ὅτι τῷ γένει πρὸς πατρὸς μὲν ἦν Ἡρακλείδης ἀπὸ Καράνου, πρὸς δὲ μητρὸς Αἰακίδης ἀπὸ Νεοπτολέμου, τῶν πάνυ πεπιστευμένων ἐστί. λέγεται δέ Φίλιππος ἐν [p. 226] θρᾴκῃ τῇ Ὀλυμπιάδι συμμυηθείς αὐτός τε μειράκιον ὢν ἔτι κἀκείνης παιδὸς ὀρφανῆς γονέων ἐρασθῆναι καὶ τὸν γάμον οὕτως ἁρμόσαι, πείσας τὸν ἀδελφὸν αὐτῆς Ἀρύμβαν.\n\n### Ploutarchos, in regards to Alexander, in English\n\nAs for the lineage of Alexander, on his father's side he was a descendant of Heracles through Caranus, and on his mother's side a descendant of Aeacus through Neoptolemus; this is accepted without any question. And we are told that Philip, after being initiated into the mysteries of Samothrace at the same time with Olympias, he himself being still a youth and she an orphan child, fell in love with her and betrothed himself to her at once with the consent of her brother, Arymbas.\n# Note on text\n\n[Text can be found here](http://www.perseus.tufts.edu/hopper/text?doc=Perseus%3Atext%3A2008.01.0129%3Achapter%3D2%3Asection%3D1)",
    "title": "Alexandros",
    "termsOfService": "there are no TOS at this moment, use at your own risk we take no responsibility",
    "contact": {
      "url": "https://github.com/odysseia-greek",
      "email": "joerivrijaldenhoven@odysseia.io"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.2.4"
  },
  "host": "k3s-odysseia.greek",
  "basePath": "/alexandros/v1",
  "paths": {
    "/health": {
      "get": {
        "description": "Checks if api is healthy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "status"
        ],
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Health",
            "schema": {
              "$ref": "#/definitions/Health"
            }
          },
          "502": {
            "description": "Health",
            "schema": {
              "$ref": "#/definitions/Health"
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "description": "This endpoint returns a \"pong\" response to indicate that the API is reachable.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "status"
        ],
        "summary": "Checks the reachability of the API.",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "ResultModel",
            "schema": {
              "$ref": "#/definitions/ResultModel"
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "description": "Searches the dictionary for a word in Greek (English wip)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "search"
        ],
        "operationId": "search",
        "parameters": [
          {
            "type": "string",
            "format": "word",
            "description": "word or part of word being queried",
            "name": "word",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "mode",
            "description": "Determines a number of query modes; fuzzy, exact or phrase",
            "name": "mode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "lang",
            "description": "language to use (greek, english, dutch)",
            "name": "lang",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "searchWord",
            "description": "search the word if found in texts. This slows down operations so not recommended in fuzzy or partial modes",
            "name": "searchWord",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Meros",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Meros"
              }
            }
          },
          "400": {
            "description": "ValidationError",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "404": {
            "description": "NotFoundError",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          },
          "405": {
            "description": "MethodError",
            "schema": {
              "$ref": "#/definitions/MethodError"
            }
          },
          "502": {
            "description": "ElasticSearchError",
            "schema": {
              "$ref": "#/definitions/ElasticSearchError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DatabaseHealth": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "x-go-name": "ClusterName",
          "example": "aristoteles"
        },
        "healthy": {
          "type": "boolean",
          "x-go-name": "Healthy",
          "example": true
        },
        "serverName": {
          "type": "string",
          "x-go-name": "ServerName",
          "example": "aristoteles-es-worker-0"
        },
        "serverVersion": {
          "type": "string",
          "x-go-name": "ServerVersion",
          "example": "8.8.0"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "ElasticErrorMessage": {
      "type": "object",
      "properties": {
        "elasticError": {
          "type": "string",
          "x-go-name": "ElasticError"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "ElasticSearchError": {
      "type": "object",
      "required": [
        "uniqueCode"
      ],
      "properties": {
        "errorModel": {
          "$ref": "#/definitions/ElasticErrorMessage"
        },
        "uniqueCode": {
          "type": "string",
          "x-go-name": "UniqueCode",
          "example": "94374b4f-3dda-4ffb-b33b-2cb6ba092b84"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "ErrorModel": {
      "type": "object",
      "required": [
        "uniqueCode"
      ],
      "properties": {
        "uniqueCode": {
          "type": "string",
          "x-go-name": "UniqueCode",
          "example": "94374b4f-3dda-4ffb-b33b-2cb6ba092b84"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "Health": {
      "type": "object",
      "properties": {
        "databaseHealth": {
          "$ref": "#/definitions/DatabaseHealth"
        },
        "healthy": {
          "type": "boolean",
          "x-go-name": "Healthy",
          "example": true
        },
        "memory": {
          "$ref": "#/definitions/Memory"
        },
        "time": {
          "type": "string",
          "x-go-name": "Time",
          "example": "2023-06-07 15:02:11.678766777 +0000 UTC m=+5090.268683461"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "Memory": {
      "type": "object",
      "properties": {
        "alloc": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Alloc"
        },
        "free": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Free"
        },
        "sys": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Sys"
        },
        "totalAlloc": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "TotalAlloc"
        },
        "unit": {
          "type": "string",
          "x-go-name": "Unit"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "Meros": {
      "type": "object",
      "required": [
        "greek",
        "english"
      ],
      "properties": {
        "dutch": {
          "type": "string",
          "x-go-name": "Dutch",
          "example": "ezel"
        },
        "english": {
          "type": "string",
          "x-go-name": "English",
          "example": "an ass"
        },
        "greek": {
          "type": "string",
          "x-go-name": "Greek",
          "example": "ὄνος"
        },
        "linkedWord": {
          "type": "string",
          "x-go-name": "LinkedWord"
        },
        "original": {
          "type": "string",
          "x-go-name": "Original"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "MethodError": {
      "type": "object",
      "required": [
        "uniqueCode"
      ],
      "properties": {
        "errorModel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MethodMessages"
          },
          "x-go-name": "Messages"
        },
        "uniqueCode": {
          "type": "string",
          "x-go-name": "UniqueCode",
          "example": "94374b4f-3dda-4ffb-b33b-2cb6ba092b84"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "MethodMessages": {
      "description": "MethodMessages messages used in method error",
      "type": "object",
      "properties": {
        "allowedMethods": {
          "type": "string",
          "x-go-name": "Methods",
          "example": "GET"
        },
        "methodError": {
          "type": "string",
          "x-go-name": "Message",
          "example": "Method DELETE not allowed at this endpoint"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "NotFoundError": {
      "type": "object",
      "required": [
        "uniqueCode"
      ],
      "properties": {
        "errorModel": {
          "$ref": "#/definitions/NotFoundMessage"
        },
        "uniqueCode": {
          "type": "string",
          "x-go-name": "UniqueCode",
          "example": "94374b4f-3dda-4ffb-b33b-2cb6ba092b84"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "NotFoundMessage": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "x-go-name": "Reason",
          "example": "produced 0 results"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type",
          "example": "query for obscura"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "ResultModel": {
      "type": "object",
      "required": [
        "result"
      ],
      "properties": {
        "result": {
          "type": "string",
          "x-go-name": "Result",
          "example": "pong"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "Rhema": {
      "type": "object",
      "properties": {
        "rhemai": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RhemaSource"
          },
          "x-go-name": "Rhemai"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "RhemaSource": {
      "type": "object",
      "required": [
        "author",
        "greek",
        "translations",
        "book",
        "chapter",
        "section",
        "perseusTextLink"
      ],
      "properties": {
        "author": {
          "type": "string",
          "x-go-name": "Author",
          "example": "Herodotos"
        },
        "book": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Book",
          "example": 1
        },
        "chapter": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Chapter",
          "example": 1
        },
        "greek": {
          "type": "string",
          "x-go-name": "Greek",
          "example": "ὡς δέ οἱ ταῦτα ἔδοξε, καὶ ἐποίεε κατὰ τάχος·"
        },
        "perseusTextLink": {
          "type": "string",
          "x-go-name": "PerseusTextLink",
          "example": "https://externallink"
        },
        "section": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Section",
          "example": 1
        },
        "translations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Translations",
          "example": [
            "first translation",
            "second translation"
          ]
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "ValidationError": {
      "type": "object",
      "required": [
        "uniqueCode"
      ],
      "properties": {
        "errorModel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationMessages"
          },
          "x-go-name": "Messages"
        },
        "uniqueCode": {
          "type": "string",
          "x-go-name": "UniqueCode",
          "example": "94374b4f-3dda-4ffb-b33b-2cb6ba092b84"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    },
    "ValidationMessages": {
      "type": "object",
      "properties": {
        "validationField": {
          "type": "string",
          "x-go-name": "Field",
          "example": "word"
        },
        "validationMessage": {
          "type": "string",
          "x-go-name": "Message",
          "example": "cannot be empty"
        }
      },
      "x-go-package": "github.com/odysseia-greek/agora/plato/models"
    }
  }
}